/***********************************/
/* StatusView based on BView class */
/* Created : 9/2/2007 - 20:44:21   */
/* Code Generated by MeTOS         */
/***********************************/

#include "StatusView.h"
#include "clsWidgetBlock.h"
	
#include <String.h>
#include <Slider.h>
#include <Window.h>
#include <StringView.h>

/***** Constructor ****/
StatusView::StatusView(BRect frame,const char *name,uint32 resizeMask,uint32 flags)
: BView(frame,name,resizeMask,flags)
{
	// Allocate object
	_zoomslider = new BSlider(BRect(5.00, -15.00,60.00,5.00),"ZoomSlider","",
	                          new BMessage(MESSAGE_ZOOM_SELECTED) ,0,800);
    _zoomslider->SetValue(100);
    _zoomslider->SetKeyIncrementValue(100);
	_zoomslider->SetHashMarks(B_HASH_MARKS_BOTTOM);
	
	_statusstringview = new BStringView(BRect(70, 4.0 ,Bounds().right, 20.0),"Status", "[Status bar]");
//	_statusstringview->SetAlignment(B_ALIGN_CENTER);
	
    SetViewColor(219,219,219,0);

	// Adding object
	AddChild(_zoomslider);
	AddChild(_statusstringview);
	AddChild ( new clsWidgetBlock(BRect(150,Bounds().top + 5,Bounds().right - 5 ,
	                              Bounds().bottom -5 ),0,B_FOLLOW_ALL_SIDES) );

}

/***** AttachedToWindow ****/
void StatusView::AttachedToWindow()
{
	SetViewColor(192, 192, 192);
	SetLowColor (192, 192, 192);
	
	_zoomslider->SetTarget(this);

}

///***** AllAttached ****/
//void StatusView::AllAttached()
//{
//}
//
///***** AllDetached ****/
//void StatusView::AllDetached()
//{
//}
//
///***** DetachedFromWindow ****/
//void StatusView::DetachedFromWindow()
//{
//}
//

/***** MessageReceived ****/
void StatusView::MessageReceived(BMessage *msg)
{

	BString str;
	
	switch(msg->what)
	{
		case MESSAGE_ZOOM_SELECTED:
						
			str << _zoomslider->Value();
			//_zoomslider->SetLabel( str.String() );
			_statusstringview->SetText( str.String() );
			
			Window()->PostMessage(new BMessage(MESSAGE_ZOOM_SELECTED) );

		break;
		
	}

}

///***** Draw ****/
//void StatusView::Draw(BRect updateRect)
//{
//}
//
///***** MouseDown ****/
//void StatusView::MouseDown(BPoint where)
//{
//}
//
///***** MouseUp ****/
//void StatusView::MouseUp(BPoint where)
//{
//}
//
/***** MouseMoved ****/
//void StatusView::MouseMoved(BPoint where,uint32 code,const BMessage *a_message)
//{
//}
//
///***** WindowActivated ****/
//void StatusView::WindowActivated(bool state)
//{
//}
//
///***** KeyDown ****/
//void StatusView::KeyDown(const char *bytes,int32 numBytes)
//{
//}
//
///***** KeyUp ****/
//void StatusView::KeyUp(const char *bytes,int32 numBytes)
//{
//}
//
///***** FrameMoved ****/
//void StatusView::FrameMoved(BPoint new_position)
//{
//}
//
///***** FrameResized ****/
//void StatusView::FrameResized(float new_width,float new_height)
//{
//}
//
///***** TargetedByScrollView ****/
//void StatusView::TargetedByScrollView(BScrollView *scroll_view)
//{
//}

