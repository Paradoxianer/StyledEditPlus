/*********************************/
/* WorkView based on BView class */
/* Created : 9/2/2007 - 20:44:21 */
/* Code Generated by MeTOS       */
/*********************************/

#include "WorkView.h"

#include <View.h>
#include <Application.h>
#include "DocumentView.h"

/***** Constructor ****/
WorkView::WorkView(BRect frame,const char *name,uint32 resizeMask,uint32 flags)
: BView(frame,name,resizeMask,flags)
{
	_scale = 1;

	// Allocate object
	_documentview = new DocumentView(BRect(30.00,30.00,400,500),
	                                 "DocumentView",B_FOLLOW_NONE,B_WILL_DRAW);
    
    //_documentview->MakeResizable(true, this);
	_documentview->SetStylable(true);
    AddChild(_documentview);
    
	SetViewColor(89,89,89,0);

}

/***** AttachedToWindow ****/
void WorkView::AttachedToWindow()
{
	SetZoom(100); 
}
//
///***** AllAttached ****/
//void WorkView::AllAttached()
//{
//}
//
///***** DetachedFromWindow ****/
//void WorkView::DetachedFromWindow()
//{
//}
//
///***** AllDetached ****/
//void WorkView::AllDetached()
//{
//}
//
/***** MessageReceived ****/
void WorkView::MessageReceived(BMessage *msg)
{
		    
	switch(msg->what) {
	
		case '11kh':
		
		break;
		
    }
	
}

/***** Draw ****/
/*void WorkView::Draw(BRect updateRect)
{
  
  BView::Draw(updateRect);
  // No se por que lo puse
  // _documentview->Invalidate();

}*/

///***** MouseDown ****/
//void WorkView::MouseDown(BPoint where)
//{
//}
//
///***** MouseUp ****/
//void WorkView::MouseUp(BPoint where)
//{
//}
//
///***** MouseMoved ****/
//void WorkView::MouseMoved(BPoint where,uint32 code,const BMessage *a_message)
//{
//}
//
///***** WindowActivated ****/
//void WorkView::WindowActivated(bool state)
//{
//}
//
///***** KeyDown ****/
//void WorkView::KeyDown(const char *bytes,int32 numBytes)
//{
//}
//
///***** KeyUp ****/
//void WorkView::KeyUp(const char *bytes,int32 numBytes)
//{
//}
//
//***** FrameResized ****/
//void WorkView::FrameResized(float new_width,float new_height)
//{
//
//}
//
///***** FrameMoved ****/
//void WorkView::FrameMoved(BPoint new_position)
//{
//}
//

/***** TargetedByScrollView ****/
void WorkView::TargetedByScrollView(BScrollView *scroll_view)
{

	// Sin Efecto
	_documentview->Invalidate();

}

float wDefault = 600;
float hDefault = 1000;

void WorkView::SetZoom(float zoom) {

 
    float w = (zoom) * (wDefault/100);
    float h = (zoom) * (hDefault/100);
    
	_documentview->ResizeTo( w , h );
    _documentview->SetTextRect(BRect (_documentview->Bounds().left + 30 ,
                                      _documentview->Bounds().top + 30 , 
                                      _documentview->Bounds().right - 30 , 
                                      _documentview->Bounds().bottom - 20 ) );

	_documentview->SetScale(zoom/100);
	
	_scale = zoom / 100 ;

	Invalidate();
	_documentview->Invalidate();

}
