#ifndef _OOFFICEWINDOW_H
#define _OOFFICEWINDOW_H
/****************************************/
/* OOfficeWindow based on BWindow class */
/* Created : 9/2/2007 - 20:44:21        */
/* Code Generated by MeTOS              */
/****************************************/

#include <Window.h>
#include <ScrollView.h>
#include <TabView.h>

class WorkView;
class StatusView;
class BMenuBar;
class BMenu;
class BMenuItem;
class BPopUpMenu;
class BTabView;
class CColorPicker;
class ColorButton;
class FormatToolBar;


class OOfficeWindow : public BWindow
{
public:
	// publics functions
	OOfficeWindow(BRect frame,const char * title,window_look look,window_feel feel,uint32 flags,uint32 workspace = B_CURRENT_WORKSPACE);


		WorkView*   getWorkView(int32 index) {
		
			return (WorkView*)( ((BScrollView*)(_tabView->TabAt( index )->View()))->Target() );
		
		}
		
		WorkView*   getWorkView() {
			return getWorkView (_tabView->Selection());
		}
		
	virtual	void 	MessageReceived(BMessage * message);
	virtual	void 	FrameResized(float new_width,float new_height);
//	virtual	void 	Zoom(BPoint rec_position,float rec_width,float rec_height);
	virtual	bool 	QuitRequested();

protected:
	// protected members
	BView   		*_ftoolbar;
	WorkView		*_workview;
	StatusView		*_statusview;
	BTabView		*_tabView;
	
	BMenuBar		*_menubar1;
	BMenu	        *_file;
	BMenu   		*_newmenu;
	
	BMenuItem		*_docmenu;
	BMenuItem		*_spreadmenu;
	BMenuItem		*_presmenu;
				
	BMenuItem		*_aboutmenu;
	BMenuItem		*_quitmenu;
	BMenu	        *_edit;
	BMenuItem		*_copymenu;
	BMenuItem		*_cutmenu;
	BMenuItem		*_pastemenu;
	BMenuItem		*_findmenu;
	BMenu	        *_toolbars;
};

#endif
